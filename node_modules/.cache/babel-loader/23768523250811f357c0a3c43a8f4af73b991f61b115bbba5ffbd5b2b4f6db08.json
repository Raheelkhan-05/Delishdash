{"ast":null,"code":"var _jsxFileName = \"G:\\\\College\\\\Brainybeam Info-Tech PVT LTD Internship\\\\delishdash\\\\src\\\\Tabs.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = {\n  'Fresh Produce': ['Fruits (apples, bananas, berries, etc.)', 'Vegetables (leafy greens, root vegetables, etc.)', 'Herbs (basil, cilantro, parsley, etc.)', 'Organic options'],\n  'Pantry Staples': ['Grains (rice, quinoa, pasta, etc.)', 'Legumes (beans, lentils, chickpeas, etc.)', 'Cooking oils (olive oil, coconut oil, etc.)', 'Baking essentials (flour, sugar, baking powder, etc.)', 'Canned goods (tomatoes, beans, soups, etc.)'],\n  'Gourmet Treats': ['Artisanal chocolates', 'Specialty cheeses', 'Gourmet snacks (nuts, crackers, etc.)', 'Imported delicacies (truffle oil, caviar, etc.)', 'Premium condiments (gourmet mustards, sauces, etc.)'],\n  'Gluten-Free Snacks': ['Gluten-free chips and crackers', 'Gluten-free granola bars', 'Gluten-free cookies and sweets', 'Gluten-free bread and baked goods', 'Gluten-free cereals'],\n  'Plant-Based Alternatives': ['Plant-based milk (almond milk, oat milk, etc.)', 'Meat substitutes (tofu, tempeh, seitan, etc.)', 'Vegan cheese', 'Plant-based protein powders', 'Plant-based snacks (protein bars, chips, etc.)']\n};\nfunction App() {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState('Fresh Produce');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Our Food Products Website\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: Object.keys(categories).map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedCategory(category),\n        className: selectedCategory === category ? 'active' : '',\n        children: category\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: categories[selectedCategory].map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wG9g2zRb3B+HNKpllpLVU+2SOYo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","categories","App","_s","selectedCategory","setSelectedCategory","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Object","keys","map","category","onClick","item","index","_c","$RefreshReg$"],"sources":["G:/College/Brainybeam Info-Tech PVT LTD Internship/delishdash/src/Tabs.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst categories = {\r\n  'Fresh Produce': [\r\n    'Fruits (apples, bananas, berries, etc.)',\r\n    'Vegetables (leafy greens, root vegetables, etc.)',\r\n    'Herbs (basil, cilantro, parsley, etc.)',\r\n    'Organic options',\r\n  ],\r\n  'Pantry Staples': [\r\n    'Grains (rice, quinoa, pasta, etc.)',\r\n    'Legumes (beans, lentils, chickpeas, etc.)',\r\n    'Cooking oils (olive oil, coconut oil, etc.)',\r\n    'Baking essentials (flour, sugar, baking powder, etc.)',\r\n    'Canned goods (tomatoes, beans, soups, etc.)',\r\n  ],\r\n  'Gourmet Treats': [\r\n    'Artisanal chocolates',\r\n    'Specialty cheeses',\r\n    'Gourmet snacks (nuts, crackers, etc.)',\r\n    'Imported delicacies (truffle oil, caviar, etc.)',\r\n    'Premium condiments (gourmet mustards, sauces, etc.)',\r\n  ],\r\n  'Gluten-Free Snacks': [\r\n    'Gluten-free chips and crackers',\r\n    'Gluten-free granola bars',\r\n    'Gluten-free cookies and sweets',\r\n    'Gluten-free bread and baked goods',\r\n    'Gluten-free cereals',\r\n  ],\r\n  'Plant-Based Alternatives': [\r\n    'Plant-based milk (almond milk, oat milk, etc.)',\r\n    'Meat substitutes (tofu, tempeh, seitan, etc.)',\r\n    'Vegan cheese',\r\n    'Plant-based protein powders',\r\n    'Plant-based snacks (protein bars, chips, etc.)',\r\n  ],\r\n};\r\n\r\nfunction App() {\r\n  const [selectedCategory, setSelectedCategory] = useState('Fresh Produce');\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to Our Food Products Website</h1>\r\n      <div className=\"tabs\">\r\n        {Object.keys(categories).map((category) => (\r\n          <button\r\n            key={category}\r\n            onClick={() => setSelectedCategory(category)}\r\n            className={selectedCategory === category ? 'active' : ''}\r\n          >\r\n            {category}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"items\">\r\n        {categories[selectedCategory].map((item, index) => (\r\n          <div key={index} className=\"item\">\r\n            {item}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAG;EACjB,eAAe,EAAE,CACf,yCAAyC,EACzC,kDAAkD,EAClD,wCAAwC,EACxC,iBAAiB,CAClB;EACD,gBAAgB,EAAE,CAChB,oCAAoC,EACpC,2CAA2C,EAC3C,6CAA6C,EAC7C,uDAAuD,EACvD,6CAA6C,CAC9C;EACD,gBAAgB,EAAE,CAChB,sBAAsB,EACtB,mBAAmB,EACnB,uCAAuC,EACvC,iDAAiD,EACjD,qDAAqD,CACtD;EACD,oBAAoB,EAAE,CACpB,gCAAgC,EAChC,0BAA0B,EAC1B,gCAAgC,EAChC,mCAAmC,EACnC,qBAAqB,CACtB;EACD,0BAA0B,EAAE,CAC1B,gDAAgD,EAChD,+CAA+C,EAC/C,cAAc,EACd,6BAA6B,EAC7B,gDAAgD;AAEpD,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGP,QAAQ,CAAC,eAAe,CAAC;EAEzE,oBACEE,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,EAAI;IAAoC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7CV,OAAA;MAAKW,SAAS,EAAC,MAAM;MAAAL,QAAA,EAClBM,MAAM,CAACC,IAAI,CAACZ,UAAU,CAAC,CAACa,GAAG,CAAEC,QAAQ,iBACpCf,OAAA;QAEEgB,OAAO,EAAEA,CAAA,KAAMX,mBAAmB,CAACU,QAAQ,CAAE;QAC7CJ,SAAS,EAAEP,gBAAgB,KAAKW,QAAQ,GAAG,QAAQ,GAAG,EAAG;QAAAT,QAAA,EAExDS;MAAQ,GAJJA,QAAQ;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKP,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNV,OAAA;MAAKW,SAAS,EAAC,OAAO;MAAAL,QAAA,EACnBL,UAAU,CAACG,gBAAgB,CAAC,CAACU,GAAG,CAAC,CAACG,IAAI,EAAEC,KAAK,kBAC5ClB,OAAA;QAAiBW,SAAS,EAAC,MAAM;QAAAL,QAAA,EAC9BW;MAAI,GADGC,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACP,EAAA,CA1BQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}